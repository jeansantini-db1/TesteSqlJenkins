name: Validação scripts SQL e Título do PR

on:
  pull_request:
    branches: [ "dev" ]
    types: [ "opened", "edited", "synchronize", "reopened" ]

jobs:
  validar-pr:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout do código
        uses: actions/checkout@v4

      - name: 🧪 Validar título do PR
        uses: amannn/action-pull-request-title@v3
        with:
          title: ${{ github.event.pull_request.title }}
          regex: '^\[[a-zA-Z]{1,7}\-\d{1,7}\] .+$'

      - name: 🔍 Verificar arquivos .sql modificados
        id: sqlval
        run: |
          echo "🚨 Validando arquivos SQL..."

          modified_sql=$(git diff --name-only origin/${{ github.base_ref }}...${{ github.head_ref }} | grep '\.sql$' || true)

          if [ -z "$modified_sql" ]; then
            echo "✅ Nenhum script SQL alterado."
            exit 0
          fi

          has_error=0

          for file in $modified_sql; do
            echo "🔎 Validando $file"
            
            # Normaliza para letras minúsculas (evita false negative)
            lower_content=$(tr '[:upper:]' '[:lower:]' < "$file")
            
            # Tipos que exigem OR REPLACE
            tipos=("package" "procedure" "function" "trigger" "view" "type")

            for tipo in "${tipos[@]}"; do
              if echo "$lower_content" | grep -q "create[[:space:]]\\+$tipo"; then
                if ! echo "$lower_content" | grep -q "create[[:space:]]\\+or[[:space:]]\\+replace[[:space:]]\\+$tipo"; then
                  echo "❌ $file contém CREATE $tipo mas está sem OR REPLACE"
                  has_error=1
                fi
              fi
            done

            # DELETE sem WHERE
            if echo "$lower_content" | grep -qE 'delete\s+from\s+\w+\s*;?' && ! echo "$lower_content" | grep -q 'where'; then
              echo "❌ $file contém DELETE sem WHERE"
              has_error=1
            fi

            # DROP alerta (não falha)
            if echo "$lower_content" | grep -q 'drop '; then
              echo "⚠️ Atenção: DROP encontrado em $file"
            fi

            # Encoding UTF-8
            if ! file -bi "$file" | grep -q 'utf-8'; then
              echo "❌ $file não está em UTF-8"
              has_error=1
            fi
          done

          exit $has_error
