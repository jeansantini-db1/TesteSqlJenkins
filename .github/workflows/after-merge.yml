name: after-merge

on:
  pull_request:
    types: [closed]
    branches: [ dev ]

jobs:
  log-sql-scripts:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repositório
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # garante histórico para diff

      - name: Configurar usuário Git
        run: |
          git config user.name "actions-bot"
          git config user.email "actions@github.com"

      - name: Registrar scripts no log de execução
        run: |
          mkdir -p exec-log
          LOG_FILE="exec-log/$(date +'%Y-%m-%d').txt"

          # Extrair card do título do PR (exemplo: [ABC-123] Criar tabela)
          CARD=$(echo "${{ github.event.pull_request.title }}" | sed -n 's/.*\[\(.*-[0-9]*\)\].*/\1/p')
          AUTHOR=${{ github.event.pull_request.user.login }}

          # Encontrar arquivos .sql alterados no merge
          MERGE_COMMIT=$(git rev-parse HEAD)
          PARENT_COMMIT=$(git rev-parse HEAD^)

          FILES=$(git diff --name-only $PARENT_COMMIT $MERGE_COMMIT -- '*.sql')

          if [ -z "$FILES" ]; then
            echo "Nenhum arquivo .sql encontrado neste merge."
            exit 0
          fi

          for file in $FILES; do
            echo "$(date +'%Y-%m-%dT%H:%M:%S') | $CARD | $file | autor=$AUTHOR | status=PENDENTE" >> $LOG_FILE
          done

          git add $LOG_FILE
          git commit -m "Registrar scripts pendentes em $LOG_FILE"
          git push
